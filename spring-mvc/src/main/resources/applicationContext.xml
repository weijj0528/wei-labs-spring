<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--Step4：Spring配置-->

    <!-- *开启注解扫描-->
    <context:annotation-config/>
    <!-- *组件扫描的包路径-->
    <context:component-scan base-package="com.weiun.spring.mvc.controller"/>

    <!-- 如需要返回JSON格式响应，需要配置转换器，默认使用Jackson，可配置其他转换器，如Fastjson-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--*Jackson转换器默认可以不配置，如需要改成其他如FastJSON则需要显式配置-->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--
        实图解析器，如前后端分离开发可不配置，如非JSP可配置为其他视图解析器
        注意配置：{prefix}{viewNames}{suffix} '/'的位置
        eg:/WEB-INF/www/hello.jsp  /的位置可以配置在prefix中也可以在viewNames中，建议在prefix中
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="viewNames">
            <list>
                <value>**</value>
            </list>
        </property>
        <property name="prefix" value="/WEB-INF/www/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="256"/>
    </bean>

</beans>